generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(cuid())
  name        String       @default("Anonymous")
  email       String       @unique
  password    String       @default("changeme123")
  createdAt   DateTime     @default(now())
  submissions Submission[]
  tipVotes    TipVote[]    // ✅ Add this line
}

model Question {
  id          String       @id @default(cuid())
  title       String
  language    String
  correctCode String
  createdAt   DateTime     @default(now())
  submissions Submission[]
}

model Submission {
  id         String    @id @default(cuid())
  userId     String
  questionId String
  userCode   String
  isCorrect  Boolean
  createdAt  DateTime  @default(now())

  user       User      @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Cascade)
  question   Question  @relation(fields: [questionId], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model Feedback {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

model SupportRequest {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
}

model Suggestion {
  id        String   @id @default(cuid())
  name      String
  email     String
  title     String
  details   String
  createdAt DateTime @default(now())
}

model Tip {
  id        String   @id @default(cuid())
  content   String
  author    String
  createdAt DateTime @default(now())
  votes     TipVote[]  // ✅ Add this line
}

model TipVote {
  id        String   @id @default(cuid())
  tipId     String
  userId    String
  createdAt DateTime @default(now())

  tip       Tip      @relation(fields: [tipId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([tipId, userId]) // prevents duplicate votes
}
